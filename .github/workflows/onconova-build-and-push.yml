#
name: Continuous Deployment on Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  RELEASE_TAG: ${{ github.event.release.tag_name }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        id: server_push
        uses: docker/build-push-action@v6
        with:
          context: server 
          push: true
          build-contexts: |
            certificates=./certificates
          tags: |
            ghcr.io/${{ env.REPOSITORY }}/server:${{ env.RELEASE_TAG }}
            ghcr.io/${{ env.REPOSITORY }}/client:latest

      - name: Build and push client image
        id: client_push
        uses: docker/build-push-action@v6
        with:
          context: client 
          push: true
          build-contexts: |
            plugins=./client/src/plugins
            certificates=./certificates
          tags: |
            ghcr.io/${{ env.REPOSITORY }}/client:${{ env.RELEASE_TAG }}
            ghcr.io/${{ env.REPOSITORY }}/client:latest

  build-and-deploy-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
  
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1

      - name: Install dependencies
        run: |
          cd docs
          python -m pip install --upgrade pip
          pip install .
          pip install ../server
          # Install FHIR IG Publisher dependencies
          npm install -g fsh-sushi
          gem install jekyll bundler

      - name: Setup Docs Deploy
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Build and deploy documentation
        run: |
          cd docs
          npx @compodoc/compodoc@1.1.26 -p ../client/tsconfig.doc.json -d ./src/compodoc/ -y src/assets/css/compodoc/ --hideGenerator --theme material
          cd ../fhir/ig/ 
          ./_updatePublisher.sh -y
          ./_genonce.sh 
          mv ./output ../../docs/src/fhir-ig 
          cd ../../docs
          git fetch origin gh-pages --depth=1
          mike deploy --push --update-aliases $(echo "${{ github.event.release.tag_name }}" | grep -oP '^\d+\.\d+') latest
          mike set-default latest
