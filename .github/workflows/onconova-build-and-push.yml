#
name: Continuous Deployment on Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  RELEASE_TAG: ${{ github.event.release.tag_name }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        id: server_push
        uses: docker/build-push-action@v6
        with:
          context: server 
          push: true
          build-contexts: |
            certificates=./certificates
          tags: |
            ghcr.io/${{ env.REPOSITORY }}/server:${{ env.RELEASE_TAG }}
            ghcr.io/${{ env.REPOSITORY }}/client:latest

      - name: Build and push client image
        id: client_push
        uses: docker/build-push-action@v6
        with:
          context: client 
          push: true
          build-contexts: |
            plugins=./client/src/plugins
            certificates=./certificates
          tags: |
            ghcr.io/${{ env.REPOSITORY }}/client:${{ env.RELEASE_TAG }}
            ghcr.io/${{ env.REPOSITORY }}/client:latest

  build-and-deploy-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.DEPLOY_BOT_APP_ID }}
          private-key: ${{ secrets.DEPLOY_BOT_APP_KEY }}
          owner: ${{ github.repository_owner }}
          permission-contents: write

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Checkout Onconova repository
        uses: actions/checkout@v4

      - name: Checkout docs repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: onconova/docs
          path: docs-repo
          ref: main
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'

      - name: Install dependencies
        working-directory: ./docs-repo
        run: |
          python -m pip install --upgrade pip
          pip install ../docs
          pip install ../server

      - name: Setup Git CLI user
        working-directory: ./docs-repo
        run: |
          git config user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Build and deploy documentation
        working-directory: ./docs-repo
        run: |
          npx @compodoc/compodoc@1.1.26 -p ../client/tsconfig.doc.json -d ../docs/src/compodoc/ -y ../docs/src/assets/css/compodoc/ --hideGenerator --theme material
          git fetch origin main --depth=1
          mike deploy --push -b main --config-file ../docs/mkdocs.yml --update-aliases $(echo "${{ github.event.release.tag_name }}" | grep -oP '^\d+\.\d+') latest
          mike set-default -b main --config-file ../docs/mkdocs.yml latest
